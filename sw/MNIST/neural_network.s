	.file	"neural_network.c"
	.option nopic
	.attribute arch, "rv32i2p0_m2p0_f2p0_c2p0_zfh"
	.attribute unaligned_access, 0
	.attribute stack_align, 16
	.text
	.globl	__divsf3
	.align	1
	.globl	neural_network_random_weights
	.type	neural_network_random_weights, @function
neural_network_random_weights:
	addi	sp,sp,-48
	sw	ra,44(sp)
	sw	s0,40(sp)
	addi	s0,sp,48
	sw	a0,-36(s0)
	sw	zero,-20(s0)
	j	.L2
.L5:
	call	rand
	mv	a5,a0
	fcvt.s.w	fa5,a5
	lui	a5,%hi(.LC0)
	lw	a1,%lo(.LC0)(a5)
	fmv.x.w	a0,fa5
	call	__divsf3
	fmv.w.x	fa5,a0
	lw	a4,-36(s0)
	lw	a5,-20(s0)
	slli	a5,a5,2
	add	a5,a4,a5
	fsw	fa5,0(a5)
	sw	zero,-24(s0)
	j	.L3
.L4:
	call	rand
	mv	a5,a0
	fcvt.s.w	fa5,a5
	lui	a5,%hi(.LC0)
	lw	a1,%lo(.LC0)(a5)
	fmv.x.w	a0,fa5
	call	__divsf3
	fmv.w.x	fa5,a0
	lw	a4,-36(s0)
	lw	a3,-20(s0)
	li	a5,784
	mul	a3,a3,a5
	lw	a5,-24(s0)
	add	a5,a3,a5
	addi	a5,a5,8
	slli	a5,a5,2
	add	a5,a4,a5
	fsw	fa5,8(a5)
	lw	a5,-24(s0)
	addi	a5,a5,1
	sw	a5,-24(s0)
.L3:
	lw	a4,-24(s0)
	li	a5,783
	ble	a4,a5,.L4
	lw	a5,-20(s0)
	addi	a5,a5,1
	sw	a5,-20(s0)
.L2:
	lw	a4,-20(s0)
	li	a5,9
	ble	a4,a5,.L5
	nop
	nop
	lw	ra,44(sp)
	lw	s0,40(sp)
	addi	sp,sp,48
	jr	ra
	.size	neural_network_random_weights, .-neural_network_random_weights
	.globl	__extendsfdf2
	.globl	__truncdfsf2
	.align	1
	.globl	neural_network_softmax
	.type	neural_network_softmax, @function
neural_network_softmax:
	addi	sp,sp,-48
	sw	ra,44(sp)
	sw	s0,40(sp)
	sw	s1,36(sp)
	addi	s0,sp,48
	sw	a0,-36(s0)
	sw	a1,-40(s0)
	li	a5,1
	sw	a5,-20(s0)
	lw	a5,-36(s0)
	flw	fa5,0(a5)
	fsw	fa5,-28(s0)
	j	.L7
.L10:
	lw	a5,-20(s0)
	slli	a5,a5,2
	lw	a4,-36(s0)
	add	a5,a4,a5
	flw	fa5,0(a5)
	flw	fa4,-28(s0)
	flt.s	a5,fa4,fa5
	beq	a5,zero,.L8
	lw	a5,-20(s0)
	slli	a5,a5,2
	lw	a4,-36(s0)
	add	a5,a4,a5
	flw	fa5,0(a5)
	fsw	fa5,-28(s0)
.L8:
	lw	a5,-20(s0)
	addi	a5,a5,1
	sw	a5,-20(s0)
.L7:
	lw	a4,-20(s0)
	lw	a5,-40(s0)
	blt	a4,a5,.L10
	sw	zero,-20(s0)
	sw	zero,-24(s0)
	j	.L11
.L12:
	lw	a5,-20(s0)
	slli	a5,a5,2
	lw	a4,-36(s0)
	add	a5,a4,a5
	flw	fa4,0(a5)
	flw	fa5,-28(s0)
	fsub.s	fa5,fa4,fa5
	fmv.x.w	a0,fa5
	call	__extendsfdf2
	mv	a4,a0
	mv	a5,a1
	mv	a0,a4
	mv	a1,a5
	call	exp
	mv	a4,a0
	mv	a5,a1
	lw	a3,-20(s0)
	slli	a3,a3,2
	lw	a2,-36(s0)
	add	s1,a2,a3
	mv	a0,a4
	mv	a1,a5
	call	__truncdfsf2
	fmv.w.x	fa5,a0
	fsw	fa5,0(s1)
	lw	a5,-20(s0)
	slli	a5,a5,2
	lw	a4,-36(s0)
	add	a5,a4,a5
	flw	fa5,0(a5)
	flw	fa4,-24(s0)
	fadd.s	fa5,fa4,fa5
	fsw	fa5,-24(s0)
	lw	a5,-20(s0)
	addi	a5,a5,1
	sw	a5,-20(s0)
.L11:
	lw	a4,-20(s0)
	lw	a5,-40(s0)
	blt	a4,a5,.L12
	sw	zero,-20(s0)
	j	.L13
.L14:
	lw	a5,-20(s0)
	slli	a5,a5,2
	lw	a4,-36(s0)
	add	a5,a4,a5
	flw	fa5,0(a5)
	lw	a5,-20(s0)
	slli	a5,a5,2
	lw	a4,-36(s0)
	add	s1,a4,a5
	lw	a1,-24(s0)
	fmv.x.w	a0,fa5
	call	__divsf3
	fmv.w.x	fa5,a0
	fsw	fa5,0(s1)
	lw	a5,-20(s0)
	addi	a5,a5,1
	sw	a5,-20(s0)
.L13:
	lw	a4,-20(s0)
	lw	a5,-40(s0)
	blt	a4,a5,.L14
	nop
	nop
	lw	ra,44(sp)
	lw	s0,40(sp)
	lw	s1,36(sp)
	addi	sp,sp,48
	jr	ra
	.size	neural_network_softmax, .-neural_network_softmax
	.align	1
	.globl	neural_network_hypothesis
	.type	neural_network_hypothesis, @function
neural_network_hypothesis:
	addi	sp,sp,-64
	sw	ra,60(sp)
	sw	s0,56(sp)
	addi	s0,sp,64
	sw	a0,-36(s0)
	sw	a1,-40(s0)
	sw	a2,-44(s0)
	sw	zero,-20(s0)
	j	.L17
.L20:
	lw	a5,-20(s0)
	slli	a5,a5,2
	lw	a4,-44(s0)
	add	a5,a4,a5
	lw	a3,-40(s0)
	lw	a4,-20(s0)
	slli	a4,a4,2
	add	a4,a3,a4
	flw	fa5,0(a4)
	fsw	fa5,0(a5)
	sw	zero,-24(s0)
	j	.L18
.L19:
	lw	a5,-20(s0)
	slli	a5,a5,2
	lw	a4,-44(s0)
	add	a5,a4,a5
	flw	fa5,0(a5)
	fsw	fa5,-48(s0)
	lw	a4,-40(s0)
	lw	a3,-20(s0)
	li	a5,784
	mul	a3,a3,a5
	lw	a5,-24(s0)
	add	a5,a3,a5
	addi	a5,a5,8
	slli	a5,a5,2
	add	a5,a4,a5
	flw	fa3,8(a5)
	fsw	fa3,-52(s0)
	lw	a4,-36(s0)
	lw	a5,-24(s0)
	add	a5,a4,a5
	lbu	a5,0(a5)
	fcvt.s.wu	fa5,a5
	lui	a5,%hi(.LC1)
	lw	a1,%lo(.LC1)(a5)
	fmv.x.w	a0,fa5
	call	__divsf3
	fmv.w.x	fa5,a0
	flw	fa3,-52(s0)
	fmul.s	fa5,fa3,fa5
	lw	a5,-20(s0)
	slli	a5,a5,2
	lw	a4,-44(s0)
	add	a5,a4,a5
	flw	fa4,-48(s0)
	fadd.s	fa5,fa4,fa5
	fsw	fa5,0(a5)
	lw	a5,-24(s0)
	addi	a5,a5,1
	sw	a5,-24(s0)
.L18:
	lw	a4,-24(s0)
	li	a5,783
	ble	a4,a5,.L19
	lw	a5,-20(s0)
	addi	a5,a5,1
	sw	a5,-20(s0)
.L17:
	lw	a4,-20(s0)
	li	a5,9
	ble	a4,a5,.L20
	li	a1,10
	lw	a0,-44(s0)
	call	neural_network_softmax
	nop
	lw	ra,60(sp)
	lw	s0,56(sp)
	addi	sp,sp,64
	jr	ra
	.size	neural_network_hypothesis, .-neural_network_hypothesis
	.globl	__subdf3
	.align	1
	.globl	neural_network_gradient_update
	.type	neural_network_gradient_update, @function
neural_network_gradient_update:
	addi	sp,sp,-96
	sw	ra,92(sp)
	sw	s0,88(sp)
	addi	s0,sp,96
	sw	a0,-84(s0)
	sw	a1,-88(s0)
	sw	a2,-92(s0)
	mv	a5,a3
	sb	a5,-93(s0)
	addi	a5,s0,-72
	mv	a2,a5
	lw	a1,-88(s0)
	lw	a0,-84(s0)
	call	neural_network_hypothesis
	sw	zero,-20(s0)
	j	.L22
.L27:
	lbu	a5,-93(s0)
	lw	a4,-20(s0)
	bne	a4,a5,.L23
	lw	a5,-20(s0)
	slli	a5,a5,2
	addi	a5,a5,-16
	add	a5,a5,s0
	flw	fa4,-56(a5)
	lui	a5,%hi(.LC2)
	flw	fa5,%lo(.LC2)(a5)
	fsub.s	fa5,fa4,fa5
	j	.L24
.L23:
	lw	a5,-20(s0)
	slli	a5,a5,2
	addi	a5,a5,-16
	add	a5,a5,s0
	flw	fa5,-56(a5)
.L24:
	fsw	fa5,-28(s0)
	sw	zero,-24(s0)
	j	.L25
.L26:
	lw	a4,-84(s0)
	lw	a5,-24(s0)
	add	a5,a4,a5
	lbu	a5,0(a5)
	fcvt.s.wu	fa5,a5
	lui	a5,%hi(.LC1)
	lw	a1,%lo(.LC1)(a5)
	fmv.x.w	a0,fa5
	call	__divsf3
	fmv.w.x	fa5,a0
	fmv.s	fa4,fa5
	flw	fa5,-28(s0)
	fmul.s	fa5,fa5,fa4
	fsw	fa5,-32(s0)
	lw	a4,-92(s0)
	lw	a3,-20(s0)
	li	a5,784
	mul	a3,a3,a5
	lw	a5,-24(s0)
	add	a5,a3,a5
	addi	a5,a5,8
	slli	a5,a5,2
	add	a5,a4,a5
	flw	fa4,8(a5)
	flw	fa5,-32(s0)
	fadd.s	fa5,fa4,fa5
	lw	a4,-92(s0)
	lw	a3,-20(s0)
	li	a5,784
	mul	a3,a3,a5
	lw	a5,-24(s0)
	add	a5,a3,a5
	addi	a5,a5,8
	slli	a5,a5,2
	add	a5,a4,a5
	fsw	fa5,8(a5)
	lw	a5,-24(s0)
	addi	a5,a5,1
	sw	a5,-24(s0)
.L25:
	lw	a4,-24(s0)
	li	a5,783
	ble	a4,a5,.L26
	lw	a4,-92(s0)
	lw	a5,-20(s0)
	slli	a5,a5,2
	add	a5,a4,a5
	flw	fa4,0(a5)
	flw	fa5,-28(s0)
	fadd.s	fa5,fa4,fa5
	lw	a4,-92(s0)
	lw	a5,-20(s0)
	slli	a5,a5,2
	add	a5,a4,a5
	fsw	fa5,0(a5)
	lw	a5,-20(s0)
	addi	a5,a5,1
	sw	a5,-20(s0)
.L22:
	lw	a4,-20(s0)
	li	a5,9
	ble	a4,a5,.L27
	lbu	a5,-93(s0)
	slli	a5,a5,2
	addi	a5,a5,-16
	add	a5,a5,s0
	flw	fa5,-56(a5)
	fmv.x.w	a0,fa5
	call	__extendsfdf2
	mv	a4,a0
	mv	a5,a1
	mv	a0,a4
	mv	a1,a5
	call	log
	mv	a4,a0
	mv	a5,a1
	mv	a2,a4
	mv	a3,a5
	li	a0,0
	li	a1,0
	call	__subdf3
	mv	a4,a0
	mv	a5,a1
	mv	a0,a4
	mv	a1,a5
	call	__truncdfsf2
	fmv.w.x	fa5,a0
	fmv.x.w	a0,fa5
	lw	ra,92(sp)
	lw	s0,88(sp)
	addi	sp,sp,96
	jr	ra
	.size	neural_network_gradient_update, .-neural_network_gradient_update
	.align	1
	.globl	neural_network_training_step
	.type	neural_network_training_step, @function
neural_network_training_step:
	addi	sp,sp,-32
	sw	ra,28(sp)
	sw	s0,24(sp)
	sw	s1,20(sp)
	addi	s0,sp,32
	li	t0,-32768
	addi	t0,t0,1344
	add	sp,sp,t0
	li	a5,-32768
	addi	a5,a5,-16
	add	a5,a5,s0
	sw	a0,1340(a5)
	li	a5,-32768
	addi	a5,a5,-16
	add	a5,a5,s0
	sw	a1,1336(a5)
	li	a5,-32768
	addi	a5,a5,-16
	add	a5,a5,s0
	sw	a2,1332(a5)
	li	a5,-32768
	addi	a5,a5,1356
	addi	a5,a5,-16
	add	a4,a5,s0
	li	a5,32768
	addi	a2,a5,-1368
	li	a1,0
	mv	a0,a4
	call	memset
	sw	zero,-24(s0)
	sw	zero,-20(s0)
	j	.L30
.L31:
	li	a5,-32768
	addi	a5,a5,-16
	add	a5,a5,s0
	lw	a5,1340(a5)
	lw	a4,0(a5)
	lw	a3,-24(s0)
	li	a5,784
	mul	a5,a3,a5
	add	a0,a4,a5
	li	a5,-32768
	addi	a5,a5,-16
	add	a5,a5,s0
	lw	a5,1340(a5)
	lw	a4,4(a5)
	lw	a5,-24(s0)
	add	a5,a4,a5
	lbu	a3,0(a5)
	li	a5,-32768
	addi	a5,a5,1356
	addi	a5,a5,-16
	add	a4,a5,s0
	li	a5,-32768
	addi	a5,a5,-16
	add	a5,a5,s0
	mv	a2,a4
	lw	a1,1336(a5)
	call	neural_network_gradient_update
	fmv.w.x	fa4,a0
	flw	fa5,-20(s0)
	fadd.s	fa5,fa5,fa4
	fsw	fa5,-20(s0)
	lw	a5,-24(s0)
	addi	a5,a5,1
	sw	a5,-24(s0)
.L30:
	li	a5,-32768
	addi	a5,a5,-16
	add	a5,a5,s0
	lw	a5,1340(a5)
	lw	a4,8(a5)
	lw	a5,-24(s0)
	bgtu	a4,a5,.L31
	sw	zero,-24(s0)
	j	.L32
.L35:
	li	a5,-32768
	addi	a5,a5,-16
	add	a5,a5,s0
	lw	a4,1336(a5)
	lw	a5,-24(s0)
	slli	a5,a5,2
	add	a5,a4,a5
	flw	fa5,0(a5)
	li	s1,-32768
	addi	a5,s1,1312
	add	a5,a5,s0
	fsw	fa5,0(a5)
	li	a5,-32768
	addi	a5,a5,-16
	add	a4,a5,s0
	lw	a5,-24(s0)
	slli	a5,a5,2
	add	a5,a4,a5
	flw	fa4,1356(a5)
	li	a5,-32768
	addi	a5,a5,-16
	add	a5,a5,s0
	flw	fa5,1332(a5)
	fmul.s	fa5,fa4,fa5
	li	a5,-32768
	addi	a5,a5,-16
	add	a5,a5,s0
	lw	a5,1340(a5)
	lw	a5,8(a5)
	fcvt.s.wu	fa4,a5
	fmv.x.w	a1,fa4
	fmv.x.w	a0,fa5
	call	__divsf3
	fmv.w.x	fa5,a0
	addi	a5,s1,1312
	add	a5,a5,s0
	flw	fa4,0(a5)
	fsub.s	fa5,fa4,fa5
	li	a5,-32768
	addi	a5,a5,-16
	add	a5,a5,s0
	lw	a4,1336(a5)
	lw	a5,-24(s0)
	slli	a5,a5,2
	add	a5,a4,a5
	fsw	fa5,0(a5)
	sw	zero,-28(s0)
	j	.L33
.L34:
	li	a5,-32768
	addi	a5,a5,-16
	add	a5,a5,s0
	lw	a4,1336(a5)
	lw	a3,-24(s0)
	li	a5,784
	mul	a3,a3,a5
	lw	a5,-28(s0)
	add	a5,a3,a5
	addi	a5,a5,8
	slli	a5,a5,2
	add	a5,a4,a5
	flw	fa5,8(a5)
	li	s1,-32768
	addi	a5,s1,1312
	add	a5,a5,s0
	fsw	fa5,0(a5)
	li	a5,-32768
	addi	a5,a5,-16
	add	a4,a5,s0
	lw	a3,-24(s0)
	li	a5,784
	mul	a3,a3,a5
	lw	a5,-28(s0)
	add	a5,a3,a5
	addi	a5,a5,8
	slli	a5,a5,2
	add	a5,a4,a5
	flw	fa4,1364(a5)
	li	a5,-32768
	addi	a5,a5,-16
	add	a5,a5,s0
	flw	fa5,1332(a5)
	fmul.s	fa5,fa4,fa5
	li	a5,-32768
	addi	a5,a5,-16
	add	a5,a5,s0
	lw	a5,1340(a5)
	lw	a5,8(a5)
	fcvt.s.wu	fa4,a5
	fmv.x.w	a1,fa4
	fmv.x.w	a0,fa5
	call	__divsf3
	fmv.w.x	fa5,a0
	addi	a5,s1,1312
	add	a5,a5,s0
	flw	fa4,0(a5)
	fsub.s	fa5,fa4,fa5
	li	a5,-32768
	addi	a5,a5,-16
	add	a5,a5,s0
	lw	a4,1336(a5)
	lw	a3,-24(s0)
	li	a5,784
	mul	a3,a3,a5
	lw	a5,-28(s0)
	add	a5,a3,a5
	addi	a5,a5,8
	slli	a5,a5,2
	add	a5,a4,a5
	fsw	fa5,8(a5)
	lw	a5,-28(s0)
	addi	a5,a5,1
	sw	a5,-28(s0)
.L33:
	lw	a4,-28(s0)
	li	a5,783
	ble	a4,a5,.L34
	lw	a5,-24(s0)
	addi	a5,a5,1
	sw	a5,-24(s0)
.L32:
	lw	a4,-24(s0)
	li	a5,9
	ble	a4,a5,.L35
	flw	fa5,-20(s0)
	fmv.x.w	a0,fa5
	li	t0,32768
	addi	t0,t0,-1344
	add	sp,sp,t0
	lw	ra,28(sp)
	lw	s0,24(sp)
	lw	s1,20(sp)
	addi	sp,sp,32
	jr	ra
	.size	neural_network_training_step, .-neural_network_training_step
	.section	.rodata
	.align	2
.LC0:
	.word	1325400064
	.align	2
.LC1:
	.word	1132396544
	.align	2
.LC2:
	.word	1065353216
	.ident	"GCC: (g2ee5e430018) 12.2.0"
