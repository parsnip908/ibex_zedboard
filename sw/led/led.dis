
led.elf:     file format elf32-littleriscv


Disassembly of section .vectors:

00000000 <_stack_start-0x10000>:

  // external interrupts are handled by the same callback
  // until compiler supports IRQ routines
  .org 0x00
  .rept 31
  nop
   0:	00000013          	nop
   4:	00000013          	nop
   8:	00000013          	nop
   c:	00000013          	nop
  10:	00000013          	nop
  14:	00000013          	nop
  18:	00000013          	nop
  1c:	00000013          	nop
  20:	00000013          	nop
  24:	00000013          	nop
  28:	00000013          	nop
  2c:	00000013          	nop
  30:	00000013          	nop
  34:	00000013          	nop
  38:	00000013          	nop
  3c:	00000013          	nop
  40:	00000013          	nop
  44:	00000013          	nop
  48:	00000013          	nop
  4c:	00000013          	nop
  50:	00000013          	nop
  54:	00000013          	nop
  58:	00000013          	nop
  5c:	00000013          	nop
  60:	00000013          	nop
  64:	00000013          	nop
  68:	00000013          	nop
  6c:	00000013          	nop
  70:	00000013          	nop
  74:	00000013          	nop
  78:	00000013          	nop
  .endr
  jal x0, default_exc_handler
  7c:	01e0006f          	j	9a <default_exc_handler>

  // reset vector
  .org 0x80
  jal x0, reset_handler
  80:	01e0006f          	j	9e <reset_handler>

  // illegal instruction exception
  .org 0x84
  jal x0, default_exc_handler
  84:	0160006f          	j	9a <default_exc_handler>

  // ecall handler
  .org 0x88
  jal x0, default_exc_handler
  88:	0120006f          	j	9a <default_exc_handler>

Disassembly of section .text:

0000008c <delay_loop_ibex>:
/**
 * Delay loop executing within 8 cycles on ibex
 */
static void delay_loop_ibex(unsigned long loops) {
  int out; /* only to notify compiler of modifications to |loops| */
  asm volatile(
  8c:	0001                	nop
  8e:	0001                	nop
  90:	0001                	nop
  92:	0001                	nop
  94:	157d                	addi	a0,a0,-1
  96:	f97d                	bnez	a0,8c <delay_loop_ibex>
      "   addi %1, %1, -1 \n" // 1 cycle
      "   bnez %1, 1b     \n" // 3 cycles
      : "=&r" (out)
      : "0" (loops)
  );
}
  98:	8082                	ret

0000009a <default_exc_handler>:
  jal x0, default_exc_handler
  9a:	0000006f          	j	9a <default_exc_handler>

0000009e <reset_handler>:
  mv  x1, x0
  9e:	00000093          	li	ra,0
  mv  x2, x1
  a2:	8106                	mv	sp,ra
  mv  x3, x1
  a4:	8186                	mv	gp,ra
  mv  x4, x1
  a6:	8206                	mv	tp,ra
  mv  x5, x1
  a8:	8286                	mv	t0,ra
  mv  x6, x1
  aa:	8306                	mv	t1,ra
  mv  x7, x1
  ac:	8386                	mv	t2,ra
  mv  x8, x1
  ae:	8406                	mv	s0,ra
  mv  x9, x1
  b0:	8486                	mv	s1,ra
  mv x10, x1
  b2:	8506                	mv	a0,ra
  mv x11, x1
  b4:	8586                	mv	a1,ra
  mv x12, x1
  b6:	8606                	mv	a2,ra
  mv x13, x1
  b8:	8686                	mv	a3,ra
  mv x14, x1
  ba:	8706                	mv	a4,ra
  mv x15, x1
  bc:	8786                	mv	a5,ra
  mv x16, x1
  be:	8806                	mv	a6,ra
  mv x17, x1
  c0:	8886                	mv	a7,ra
  mv x18, x1
  c2:	8906                	mv	s2,ra
  mv x19, x1
  c4:	8986                	mv	s3,ra
  mv x20, x1
  c6:	8a06                	mv	s4,ra
  mv x21, x1
  c8:	8a86                	mv	s5,ra
  mv x22, x1
  ca:	8b06                	mv	s6,ra
  mv x23, x1
  cc:	8b86                	mv	s7,ra
  mv x24, x1
  ce:	8c06                	mv	s8,ra
  mv x25, x1
  d0:	8c86                	mv	s9,ra
  mv x26, x1
  d2:	8d06                	mv	s10,ra
  mv x27, x1
  d4:	8d86                	mv	s11,ra
  mv x28, x1
  d6:	8e06                	mv	t3,ra
  mv x29, x1
  d8:	8e86                	mv	t4,ra
  mv x30, x1
  da:	8f06                	mv	t5,ra
  mv x31, x1
  dc:	8f86                	mv	t6,ra
  la   x2, _stack_start
  de:	00010117          	auipc	sp,0x10
  e2:	f2210113          	addi	sp,sp,-222 # 10000 <_stack_start>

000000e6 <_start>:
  la x26, _bss_start
  e6:	16800d13          	li	s10,360
  la x27, _bss_end
  ea:	16800d93          	li	s11,360
  bge x26, x27, zero_loop_end
  ee:	01bd5763          	bge	s10,s11,fc <main_entry>

000000f2 <zero_loop>:
  sw x0, 0(x26)
  f2:	000d2023          	sw	zero,0(s10)
  addi x26, x26, 4
  f6:	0d11                	addi	s10,s10,4
  ble x26, x27, zero_loop
  f8:	ffaddde3          	bge	s11,s10,f2 <zero_loop>

000000fc <main_entry>:
  addi x10, x0, 0
  fc:	4501                	li	a0,0
  addi x11, x0, 0
  fe:	4581                	li	a1,0
  jal x1, main
 100:	004000ef          	jal	ra,104 <main>

00000104 <main>:

static int usleep(unsigned long usec) {
  return usleep_ibex(usec);
}

int main(int argc, char **argv) {
 104:	1101                	addi	sp,sp,-32
 106:	cc22                	sw	s0,24(sp)
 108:	ca26                	sw	s1,20(sp)
 10a:	c64e                	sw	s3,12(sp)
 10c:	c452                	sw	s4,8(sp)
 10e:	ce06                	sw	ra,28(sp)
 110:	c84a                	sw	s2,16(sp)
  // The lowest four bits of the highest byte written to the memory region named
  // "stack" are connected to the LEDs of the board.
  volatile uint8_t *var = (volatile uint8_t *) 0x0000c010;
  *var = 0x00;
 112:	67b1                	lui	a5,0xc

  uint32_t num = 0xD9CE4B9E; 
 114:	d9ce5437          	lui	s0,0xd9ce5
  delay_loop_ibex(usec_cycles);
 118:	005f64b7          	lui	s1,0x5f6
  *var = 0x00;
 11c:	00078823          	sb	zero,16(a5) # c010 <_stack_len+0x8010>
  uint32_t num = 0xD9CE4B9E; 
 120:	b9e40413          	addi	s0,s0,-1122 # d9ce4b9e <_stack_start+0xd9cd4b9e>
  delay_loop_ibex(usec_cycles);
 124:	e1048493          	addi	s1,s1,-496 # 5f5e10 <_stack_start+0x5e5e10>

  while (1) {
    for(int i = 24; i >= 0; i -= 8)
    {
      usleep(1000 * 1000); // 1000 ms
      *var = num >> i;
 128:	69b1                	lui	s3,0xc
    for(int i = 24; i >= 0; i -= 8)
 12a:	5a61                	li	s4,-8
 12c:	4961                	li	s2,24
  delay_loop_ibex(usec_cycles);
 12e:	8526                	mv	a0,s1
 130:	3fb1                	jal	8c <delay_loop_ibex>
      *var = num >> i;
 132:	012457b3          	srl	a5,s0,s2
 136:	0ff7f793          	zext.b	a5,a5
 13a:	00f98823          	sb	a5,16(s3) # c010 <_stack_len+0x8010>
    for(int i = 24; i >= 0; i -= 8)
 13e:	1961                	addi	s2,s2,-8
 140:	ff4917e3          	bne	s2,s4,12e <main+0x2a>
  delay_loop_ibex(usec_cycles);
 144:	8526                	mv	a0,s1
 146:	3799                	jal	8c <delay_loop_ibex>
 148:	8526                	mv	a0,s1
    }
    usleep(1000 * 1000); // 1000 ms
    *var = 0x00;
 14a:	00098823          	sb	zero,16(s3)
  delay_loop_ibex(usec_cycles);
 14e:	3f3d                	jal	8c <delay_loop_ibex>
    usleep(1000 * 1000); // 1000 ms
    num = ~num;
 150:	fff44413          	not	s0,s0
    for(int i = 24; i >= 0; i -= 8)
 154:	bfe1                	j	12c <main+0x28>

00000156 <__CTOR_LIST__>:
	...

0000015e <__CTOR_END__>:
	...

00000166 <__DTOR_END__>:
	...

Disassembly of section .stack:

0000c000 <_stack-0x2000>:
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
  nop
   0:	0282                	c.slli64	t0
   2:	0000                	unimp
   4:	0005                	c.nop	1
   6:	0401                	addi	s0,s0,0
   8:	0000                	unimp
   a:	0000                	unimp
   c:	930e                	add	t1,t1,gp
   e:	0000                	unimp
  10:	1d00                	addi	s0,sp,688
  12:	0000002b          	.4byte	0x2b
  16:	0000                	unimp
  18:	0000                	unimp
  1a:	00000057          	.4byte	0x57
	...
  26:	0101                	addi	sp,sp,0
  28:	1e06                	slli	t3,t3,0x21
  2a:	0000                	unimp
  2c:	0300                	addi	s0,sp,384
  2e:	0000                	unimp
  30:	0000                	unimp
  32:	2b02                	.2byte	0x2b02
  34:	3918                	.2byte	0x3918
  36:	0000                	unimp
  38:	0100                	addi	s0,sp,128
  3a:	0801                	addi	a6,a6,0
  3c:	001c                	.2byte	0x1c
  3e:	0000                	unimp
  40:	0201                	addi	tp,tp,0 # 0 <__DYNAMIC>
  42:	0505                	addi	a0,a0,1
  44:	0001                	nop
  46:	0100                	addi	s0,sp,128
  48:	0702                	c.slli64	a4
  4a:	002a                	c.slli	zero,0xa
  4c:	0000                	unimp
  4e:	0401                	addi	s0,s0,0
  50:	8a05                	andi	a2,a2,1
  52:	0000                	unimp
  54:	0300                	addi	s0,sp,384
  56:	003d                	c.nop	15
  58:	0000                	unimp
  5a:	4f02                	lw	t5,0(sp)
  5c:	6119                	addi	sp,sp,384
  5e:	0000                	unimp
  60:	0100                	addi	s0,sp,128
  62:	0704                	addi	s1,sp,896
  64:	005e                	c.slli	zero,0x17
  66:	0000                	unimp
  68:	0801                	addi	a6,a6,0
  6a:	8505                	srai	a0,a0,0x1
  6c:	0000                	unimp
  6e:	0100                	addi	s0,sp,128
  70:	0708                	addi	a0,sp,896
  72:	0059                	c.nop	22
  74:	0000                	unimp
  76:	6905040f          	.4byte	0x6905040f
  7a:	746e                	.2byte	0x746e
  jal x0, default_exc_handler
  7c:	0100                	addi	s0,sp,128
  7e:	0704                	addi	s1,sp,896
  jal x0, reset_handler
  80:	00000063          	beqz	zero,80 <__DYNAMIC+0x80>
  jal x0, default_exc_handler
  84:	00000203          	lb	tp,0(zero) # 0 <__DYNAMIC>
  jal x0, default_exc_handler
  88:	0300                	addi	s0,sp,384
  8a:	1318                	addi	a4,sp,416
  asm volatile(
  8c:	002d                	c.nop	11
  8e:	0000                	unimp
  90:	8410                	.2byte	0x8410
  92:	0000                	unimp
  94:	0300                	addi	s0,sp,384
  96:	0000003f 55143003 	.8byte	0x551430030000003f
  mv  x1, x0
  9e:	0000                	unimp
  a0:	1100                	addi	s0,sp,160
  mv  x2, x1
  a2:	0048                	addi	a0,sp,4
  mv  x3, x1
  a4:	0000                	unimp
  mv  x4, x1
  a6:	2501                	jal	6a6 <_bss_end+0x53e>
  mv  x5, x1
  a8:	7605                	lui	a2,0xfffe1
  mv  x6, x1
  aa:	0000                	unimp
  mv  x7, x1
  ac:	0400                	addi	s0,sp,512
  mv  x8, x1
  ae:	0001                	nop
  mv  x9, x1
  b0:	5200                	lw	s0,32(a2)
  mv x10, x1
  b2:	0000                	unimp
  mv x11, x1
  b4:	0100                	addi	s0,sp,128
  mv x12, x1
  b6:	019c                	addi	a5,sp,192
  mv x13, x1
  b8:	0002                	c.slli64	zero
  mv x14, x1
  ba:	0500                	addi	s0,sp,640
  mv x15, x1
  bc:	0070                	addi	a2,sp,12
  mv x16, x1
  be:	0000                	unimp
  mv x17, x1
  c0:	0e25                	addi	t3,t3,9
  mv x18, x1
  c2:	0076                	c.slli	zero,0x1d
  mv x19, x1
  c4:	0000                	unimp
  mv x20, x1
  c6:	000c                	.2byte	0xc
  mv x21, x1
  c8:	0000                	unimp
  mv x22, x1
  ca:	0f05                	addi	t5,t5,1
  mv x23, x1
  cc:	0001                	nop
  mv x24, x1
  ce:	2500                	.2byte	0x2500
  mv x25, x1
  d0:	0002011b          	.4byte	0x2011b
  mv x27, x1
  d4:	2600                	.2byte	0x2600
  mv x28, x1
  d6:	0000                	unimp
  mv x29, x1
  d8:	1200                	addi	s0,sp,288
  mv x30, x1
  da:	6176                	.2byte	0x6176
  mv x31, x1
  dc:	0072                	c.slli	zero,0x1c
  la   x2, _stack_start
  de:	2801                	jal	ee <_start+0x8>
  e0:	1215                	addi	tp,tp,-27 # ffffffe5 <_stack_start+0xfffeffe5>
  e2:	0002                	c.slli64	zero
  e4:	1000                	addi	s0,sp,32
  la x26, _bss_start
  e6:	0ac0                	addi	s0,sp,340
  e8:	756e                	.2byte	0x756e
  la x27, _bss_end
  ea:	006d                	c.nop	27
  ec:	00950c2b          	.4byte	0x950c2b
  bge x26, x27, zero_loop_end
  f0:	0000                	unimp
  sw x0, 0(x26)
  f2:	0040                	addi	s0,sp,4
  f4:	0000                	unimp
  addi x26, x26, 4
  f6:	00000c13          	li	s8,0
  ble x26, x27, zero_loop
  fa:	5e00                	lw	s0,56(a2)
  addi x10, x0, 0
  fc:	0001                	nop
  addi x11, x0, 0
  fe:	0a00                	addi	s0,sp,272
  jal x1, main
 100:	0069                	c.nop	26
 102:	0d32                	slli	s10,s10,0xc
int main(int argc, char **argv) {
 104:	0076                	c.slli	zero,0x1d
 106:	0000                	unimp
 108:	005c                	addi	a5,sp,4
 10a:	0000                	unimp
 10c:	1704                	addi	s1,sp,928
 10e:	0002                	c.slli64	zero
 110:	1800                	addi	s0,sp,48
  *var = 0x00;
 112:	0001                	nop
  uint32_t num = 0xD9CE4B9E; 
 114:	2800                	.2byte	0x2800
 116:	0000                	unimp
  delay_loop_ibex(usec_cycles);
 118:	3400                	.2byte	0x3400
 11a:	02250207          	.4byte	0x2250207
  *var = 0x00;
 11e:	0000                	unimp
  uint32_t num = 0xD9CE4B9E; 
 120:	0074                	addi	a3,sp,12
 122:	0000                	unimp
  delay_loop_ibex(usec_cycles);
 124:	3104                	.2byte	0x3104
 126:	0002                	c.slli64	zero
      *var = num >> i;
 128:	1800                	addi	s0,sp,48
    for(int i = 24; i >= 0; i -= 8)
 12a:	0001                	nop
 12c:	2800                	.2byte	0x2800
  delay_loop_ibex(usec_cycles);
 12e:	0000                	unimp
 130:	2200                	.2byte	0x2200
      *var = num >> i;
 132:	020a                	slli	tp,tp,0x2
 134:	0000023f 00000074 	.8byte	0x740000023f
 13c:	0000280b          	.4byte	0x280b
    for(int i = 24; i >= 0; i -= 8)
 140:	0600                	addi	s0,sp,768
 142:	024a                	slli	tp,tp,0x12
  delay_loop_ibex(usec_cycles);
 144:	0000                	unimp
 146:	0085                	addi	ra,ra,1
 148:	0000                	unimp
    *var = 0x00;
 14a:	00013207          	.4byte	0x13207
  delay_loop_ibex(usec_cycles);
 14e:	5700                	lw	s0,40(a4)
    num = ~num;
 150:	0002                	c.slli64	zero
 152:	0800                	addi	s0,sp,16
    for(int i = 24; i >= 0; i -= 8)
 154:	5a01                	li	s4,-32
 156:	7902                	.2byte	0x7902
 158:	0000                	unimp
 15a:	0000                	unimp
 15c:	0000                	unimp
 15e:	1714                	addi	a3,sp,928
 160:	0002                	c.slli64	zero
 162:	4400                	lw	s0,8(s0)
 164:	0001                	nop
 166:	0400                	addi	s0,sp,512
 168:	0000                	unimp
 16a:	0100                	addi	s0,sp,128
 16c:	01af0537          	lui	a0,0x1af0
 170:	0000                	unimp
 172:	2502                	.2byte	0x2502
 174:	0002                	c.slli64	zero
 176:	9600                	.2byte	0x9600
 178:	0000                	unimp
 17a:	1500                	addi	s0,sp,672
 17c:	0231                	addi	tp,tp,12 # c <__DYNAMIC+0xc>
 17e:	0000                	unimp
 180:	0144                	addi	s1,sp,132
 182:	0000                	unimp
 184:	0004                	.2byte	0x4
 186:	0000                	unimp
 188:	2201                	jal	288 <_bss_end+0x120>
 18a:	020a                	slli	tp,tp,0x2
 18c:	0000023f 00000096 	.8byte	0x960000023f
 194:	4a06                	lw	s4,64(sp)
 196:	0002                	c.slli64	zero
 198:	a700                	.2byte	0xa700
 19a:	0000                	unimp
 19c:	0700                	addi	s0,sp,896
 19e:	0148                	addi	a0,sp,132
 1a0:	0000                	unimp
 1a2:	00000257          	.4byte	0x257
 1a6:	0108                	addi	a0,sp,128
 1a8:	025a                	slli	tp,tp,0x16
 1aa:	0079                	c.nop	30
 1ac:	0000                	unimp
 1ae:	0400                	addi	s0,sp,512
 1b0:	00000217          	auipc	tp,0x0
 1b4:	0148                	addi	a0,sp,132
 1b6:	0000                	unimp
 1b8:	0044                	addi	s1,sp,4
 1ba:	0000                	unimp
 1bc:	0539                	addi	a0,a0,14 # 1af000e <_stack_start+0x1ae000e>
 1be:	2502                	.2byte	0x2502
 1c0:	0002                	c.slli64	zero
 1c2:	b800                	.2byte	0xb800
 1c4:	0000                	unimp
 1c6:	0400                	addi	s0,sp,512
 1c8:	0231                	addi	tp,tp,12 # 1bc <_bss_end+0x54>
 1ca:	0000                	unimp
 1cc:	0148                	addi	a0,sp,132
 1ce:	0000                	unimp
 1d0:	0044                	addi	s1,sp,4
 1d2:	0000                	unimp
 1d4:	0a22                	slli	s4,s4,0x8
 1d6:	3f02                	.2byte	0x3f02
 1d8:	0002                	c.slli64	zero
 1da:	b800                	.2byte	0xb800
 1dc:	0000                	unimp
 1de:	0b00                	addi	s0,sp,400
 1e0:	0044                	addi	s1,sp,4
 1e2:	0000                	unimp
 1e4:	4a06                	lw	s4,64(sp)
 1e6:	0002                	c.slli64	zero
 1e8:	c900                	sw	s0,16(a0)
 1ea:	0000                	unimp
 1ec:	0700                	addi	s0,sp,896
 1ee:	0150                	addi	a2,sp,132
 1f0:	0000                	unimp
 1f2:	00000257          	.4byte	0x257
 1f6:	0108                	addi	a0,sp,128
 1f8:	025a                	slli	tp,tp,0x16
 1fa:	0079                	c.nop	30
 1fc:	0000                	unimp
 1fe:	0000                	unimp
 200:	0900                	addi	s0,sp,144
 202:	0206                	slli	tp,tp,0x1
 204:	0000                	unimp
 206:	0b09                	addi	s6,s6,2
 208:	0002                	c.slli64	zero
 20a:	0100                	addi	s0,sp,128
 20c:	0801                	addi	a6,a6,0
 20e:	0025                	c.nop	9
 210:	0000                	unimp
 212:	9009                	srli	s0,s0,0x22
 214:	0000                	unimp
 216:	0c00                	addi	s0,sp,528
 218:	0000000f          	fence	unknown,unknown
 21c:	7621                	lui	a2,0xfffe8
 21e:	0000                	unimp
 220:	3100                	.2byte	0x3100
 222:	0002                	c.slli64	zero
 224:	0d00                	addi	s0,sp,656
 226:	000a                	c.slli	zero,0x2
 228:	0000                	unimp
 22a:	2121                	jal	632 <_bss_end+0x4ca>
 22c:	0061                	c.nop	24
 22e:	0000                	unimp
 230:	0c00                	addi	s0,sp,528
 232:	0114                	addi	a3,sp,128
 234:	0000                	unimp
 236:	7619                	lui	a2,0xfffe6
 238:	0000                	unimp
 23a:	5700                	lw	s0,40(a4)
 23c:	0002                	c.slli64	zero
 23e:	0d00                	addi	s0,sp,656
 240:	000a                	c.slli	zero,0x2
 242:	0000                	unimp
 244:	2619                	jal	54a <_bss_end+0x3e2>
 246:	0061                	c.nop	24
 248:	0000                	unimp
 24a:	4d16                	lw	s10,68(sp)
 24c:	0000                	unimp
 24e:	0100                	addi	s0,sp,128
 250:	111a                	slli	sp,sp,0x26
 252:	0061                	c.nop	24
 254:	0000                	unimp
 256:	1700                	addi	s0,sp,928
 258:	0075                	c.nop	29
 25a:	0000                	unimp
 25c:	0b01                	addi	s6,s6,0
 25e:	8c0d                	sub	s0,s0,a1
 260:	0000                	unimp
 262:	0e00                	addi	s0,sp,784
 264:	0000                	unimp
 266:	0100                	addi	s0,sp,128
 268:	059c                	addi	a5,sp,704
 26a:	0016                	c.slli	zero,0x5
 26c:	0000                	unimp
 26e:	00612b0b          	.4byte	0x612b0b
 272:	0000                	unimp
 274:	00da                	slli	ra,ra,0x16
 276:	0000                	unimp
 278:	6f18                	.2byte	0x6f18
 27a:	7475                	lui	s0,0xffffd
 27c:	0100                	addi	s0,sp,128
 27e:	070c                	addi	a1,sp,896
 280:	0076                	c.slli	zero,0x1d
 282:	0000                	unimp
 284:	0000                	unimp
 286:	001f 0000 0005      	.byte	0x1f, 0x00, 0x00, 0x00, 0x05, 0x00
 28c:	0401                	addi	s0,s0,0 # ffffd000 <_stack_start+0xfffed000>
 28e:	00000163          	beqz	zero,290 <_bss_end+0x128>
 292:	ec01                	bnez	s0,2aa <_bss_end+0x142>
 294:	0001                	nop
 296:	7600                	.2byte	0x7600
 298:	0000                	unimp
 29a:	2000                	.2byte	0x2000
 29c:	0001                	nop
 29e:	2700                	.2byte	0x2700
 2a0:	0001                	nop
 2a2:	5200                	lw	s0,32(a2)
 2a4:	0001                	nop
 2a6:	0100                	addi	s0,sp,128
 2a8:	80              	Address 0x00000000000002a8 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
  nop
   0:	2401                	jal	200 <_bss_end+0x98>
   2:	0b00                	addi	s0,sp,400
   4:	030b3e0b          	.4byte	0x30b3e0b
   8:	000e                	c.slli	zero,0x3
   a:	0200                	addi	s0,sp,256
   c:	0005                	c.nop	1
   e:	1331                	addi	t1,t1,-20
  10:	1702                	slli	a4,a4,0x20
  12:	0000                	unimp
  14:	03001603          	lh	a2,48(zero) # 30 <__DYNAMIC+0x30>
  18:	3a0e                	.2byte	0x3a0e
  1a:	390b3b0b          	.4byte	0x390b3b0b
  1e:	0013490b          	.4byte	0x13490b
  22:	0400                	addi	s0,sp,512
  24:	011d                	addi	sp,sp,7
  26:	1331                	addi	t1,t1,-20
  28:	0152                	slli	sp,sp,0x14
  2a:	1755                	addi	a4,a4,-11
  2c:	2158                	.2byte	0x2158
  2e:	5901                	li	s2,-32
  30:	000b570b          	.4byte	0xb570b
  34:	0500                	addi	s0,sp,640
  36:	0005                	c.nop	1
  38:	213a0e03          	lb	t3,531(s4)
  3c:	3b01                	jal	fffffd4c <_stack_start+0xfffefd4c>
  3e:	490b390b          	.4byte	0x490b390b
  42:	00170213          	addi	tp,a4,1
  46:	0600                	addi	s0,sp,768
  48:	0034                	addi	a3,sp,8
  4a:	1331                	addi	t1,t1,-20
  4c:	1702                	slli	a4,a4,0x20
  4e:	0000                	unimp
  50:	7d014807          	.4byte	0x7d014807
  54:	7f01                	lui	t5,0xfffe0
  56:	08000013          	li	zero,128
  5a:	0049                	c.nop	18
  5c:	1802                	slli	a6,a6,0x20
  5e:	187e                	slli	a6,a6,0x3f
  60:	0000                	unimp
  62:	0f09                	addi	t5,t5,2 # fffe0002 <_stack_start+0xfffd0002>
  64:	0b00                	addi	s0,sp,400
  66:	0421                	addi	s0,s0,8
  68:	1349                	addi	t1,t1,-14
  6a:	0000                	unimp
  6c:	340a                	.2byte	0x340a
  6e:	0300                	addi	s0,sp,384
  70:	3a08                	.2byte	0x3a08
  72:	0121                	addi	sp,sp,8
  74:	0b390b3b          	.4byte	0xb390b3b
  78:	1349                	addi	t1,t1,-14
  7a:	1702                	slli	a4,a4,0x20
  jal x0, default_exc_handler
  7c:	0000                	unimp
  7e:	55010b0b          	.4byte	0x55010b0b
  jal x0, reset_handler
  82:	0c000017          	auipc	zero,0xc000
  jal x0, default_exc_handler
  86:	012e                	slli	sp,sp,0xb
  jal x0, default_exc_handler
  88:	213a0e03          	lb	t3,531(s4)
  asm volatile(
  8c:	3b01                	jal	fffffd9c <_stack_start+0xfffefd9c>
  8e:	0c21390b          	.4byte	0xc21390b
  92:	13491927          	.4byte	0x13491927
  96:	2120                	.2byte	0x2120
}
  98:	0101                	addi	sp,sp,0
  jal x0, default_exc_handler
  9a:	0d000013          	li	zero,208
  mv  x1, x0
  9e:	0005                	c.nop	1
  a0:	213a0e03          	lb	t3,531(s4)
  mv  x3, x1
  a4:	3b01                	jal	fffffdb4 <_stack_start+0xfffefdb4>
  mv  x4, x1
  a6:	490b390b          	.4byte	0x490b390b
  mv  x6, x1
  aa:	0e000013          	li	zero,224
  mv  x8, x1
  ae:	0111                	addi	sp,sp,4
  mv  x9, x1
  b0:	0e25                	addi	t3,t3,9
  mv x10, x1
  b2:	1f030b13          	addi	s6,t1,496
  mv x12, x1
  b6:	17551f1b          	.4byte	0x17551f1b
  mv x14, x1
  ba:	0111                	addi	sp,sp,4
  mv x15, x1
  bc:	1710                	addi	a2,sp,928
  mv x16, x1
  be:	0000                	unimp
  mv x17, x1
  c0:	0b00240f          	.4byte	0xb00240f
  mv x19, x1
  c4:	030b3e0b          	.4byte	0x30b3e0b
  mv x21, x1
  c8:	0008                	.2byte	0x8
  mv x22, x1
  ca:	1000                	addi	s0,sp,32
  mv x23, x1
  cc:	0035                	c.nop	13
  mv x24, x1
  ce:	1349                	addi	t1,t1,-14
  mv x25, x1
  d0:	0000                	unimp
  mv x26, x1
  d2:	2e11                	jal	3e6 <_bss_end+0x27e>
  mv x27, x1
  d4:	3f01                	jal	ffffffe4 <_stack_start+0xfffeffe4>
  mv x28, x1
  d6:	0319                	addi	t1,t1,6
  mv x29, x1
  d8:	3a0e                	.2byte	0x3a0e
  mv x30, x1
  da:	390b3b0b          	.4byte	0x390b3b0b
  la   x2, _stack_start
  de:	4919270b          	.4byte	0x4919270b
  e2:	12011113          	.4byte	0x12011113
  la x26, _bss_start
  e6:	4006                	.2byte	0x4006
  e8:	7a18                	.2byte	0x7a18
  la x27, _bss_end
  ea:	0119                	addi	sp,sp,6
  ec:	12000013          	li	zero,288
  bge x26, x27, zero_loop_end
  f0:	0034                	addi	a3,sp,8
  sw x0, 0(x26)
  f2:	0b3a0803          	lb	a6,179(s4)
  addi x26, x26, 4
  f6:	0b390b3b          	.4byte	0xb390b3b
  ble x26, x27, zero_loop
  fa:	1349                	addi	t1,t1,-14
  addi x10, x0, 0
  fc:	051c                	addi	a5,sp,640
  addi x11, x0, 0
  fe:	0000                	unimp
  jal x1, main
 100:	55010b13          	addi	s6,sp,1360
int main(int argc, char **argv) {
 104:	00130117          	auipc	sp,0x130
 108:	1400                	addi	s0,sp,544
 10a:	011d                	addi	sp,sp,7 # 13010b <_stack_start+0x12010b>
 10c:	1331                	addi	t1,t1,-20
 10e:	0111                	addi	sp,sp,4
 110:	0612                	slli	a2,a2,0x4
  *var = 0x00;
 112:	0b58                	addi	a4,sp,404
  uint32_t num = 0xD9CE4B9E; 
 114:	0b59                	addi	s6,s6,22
 116:	13010b57          	.4byte	0x13010b57
  delay_loop_ibex(usec_cycles);
 11a:	0000                	unimp
  *var = 0x00;
 11c:	1d15                	addi	s10,s10,-27
 11e:	3101                	jal	fffffd1e <_stack_start+0xfffefd1e>
  uint32_t num = 0xD9CE4B9E; 
 120:	12011113          	.4byte	0x12011113
  delay_loop_ibex(usec_cycles);
 124:	5806                	lw	a6,96(sp)
 126:	570b590b          	.4byte	0x570b590b
    for(int i = 24; i >= 0; i -= 8)
 12a:	1600000b          	.4byte	0x1600000b
  delay_loop_ibex(usec_cycles);
 12e:	0034                	addi	a3,sp,8
 130:	0b3a0e03          	lb	t3,179(s4)
      *var = num >> i;
 134:	0b390b3b          	.4byte	0xb390b3b
 138:	1349                	addi	t1,t1,-14
 13a:	0000                	unimp
 13c:	03012e17          	auipc	t3,0x3012
    for(int i = 24; i >= 0; i -= 8)
 140:	3a0e                	.2byte	0x3a0e
 142:	390b3b0b          	.4byte	0x390b3b0b
  delay_loop_ibex(usec_cycles);
 146:	1119270b          	.4byte	0x1119270b
    *var = 0x00;
 14a:	1201                	addi	tp,tp,-32 # ffffffe0 <_stack_start+0xfffeffe0>
 14c:	4006                	.2byte	0x4006
  delay_loop_ibex(usec_cycles);
 14e:	7a18                	.2byte	0x7a18
    num = ~num;
 150:	0019                	c.nop	6
 152:	1800                	addi	s0,sp,48
    for(int i = 24; i >= 0; i -= 8)
 154:	0034                	addi	a3,sp,8
 156:	0b3a0803          	lb	a6,179(s4)
 15a:	0b390b3b          	.4byte	0xb390b3b
 15e:	1349                	addi	t1,t1,-14
 160:	0000                	unimp
 162:	0100                	addi	s0,sp,128
 164:	0011                	c.nop	4
 166:	1710                	addi	a2,sp,928
 168:	1755                	addi	a4,a4,-11
 16a:	0e1b0e03          	lb	t3,225(s6)
 16e:	0e25                	addi	t3,t3,9 # 3012145 <_stack_start+0x3002145>
 170:	00000513          	li	a0,0
	...

Disassembly of section .debug_loclists:

00000000 <.debug_loclists>:
  nop
   0:	00f0                	addi	a2,sp,76
   2:	0000                	unimp
   4:	0005                	c.nop	1
   6:	0004                	.2byte	0x4
   8:	0000                	unimp
   a:	0000                	unimp
   c:	00010407          	.4byte	0x10407
  10:	2c00                	.2byte	0x2c00
  12:	0001                	nop
  14:	0100                	addi	s0,sp,128
  16:	075a                	slli	a4,a4,0x16
  18:	012c                	addi	a1,sp,136
  1a:	0000                	unimp
  1c:	0156                	slli	sp,sp,0x15
  1e:	0000                	unimp
  20:	a304                	.2byte	0xa304
  22:	5a01                	li	s4,-32
  24:	009f 0407 0001      	.byte	0x9f, 0x00, 0x07, 0x04, 0x01, 0x00
  2a:	2c00                	.2byte	0x2c00
  2c:	0001                	nop
  2e:	0100                	addi	s0,sp,128
  30:	012c075b          	.4byte	0x12c075b
  34:	0000                	unimp
  36:	0156                	slli	sp,sp,0x15
  38:	0000                	unimp
  3a:	a304                	.2byte	0xa304
  3c:	5b01                	li	s6,-32
  3e:	009f 2007 0001      	.byte	0x9f, 0x00, 0x07, 0x20, 0x01, 0x00
  44:	2c00                	.2byte	0x2c00
  46:	0001                	nop
  48:	0600                	addi	s0,sp,768
  4a:	049e                	slli	s1,s1,0x7
  4c:	4b9e                	lw	s7,196(sp)
  4e:	d9ce                	sw	s3,240(sp)
  50:	00012c07          	.4byte	0x12c07
  54:	5600                	lw	s0,40(a2)
  56:	0001                	nop
  58:	0100                	addi	s0,sp,128
  5a:	0058                	addi	a4,sp,4
  5c:	00012c07          	.4byte	0x12c07
  60:	2e00                	.2byte	0x2e00
  62:	0001                	nop
  64:	0200                	addi	s0,sp,256
  66:	9f48                	.2byte	0x9f48
  68:	00012e07          	.4byte	0x12e07
  6c:	5600                	lw	s0,40(a2)
  6e:	0001                	nop
  70:	0100                	addi	s0,sp,128
  72:	0062                	c.slli	zero,0x18
  74:	00012e07          	.4byte	0x12e07
  78:	3200                	.2byte	0x3200
  7a:	0001                	nop
  jal x0, default_exc_handler
  7c:	0600                	addi	s0,sp,768
  7e:	400c                	lw	a1,0(s0)
  jal x0, reset_handler
  80:	0f42                	slli	t5,t5,0x10
  82:	9f00                	.2byte	0x9f00
  jal x0, default_exc_handler
  84:	0700                	addi	s0,sp,896
  86:	012e                	slli	sp,sp,0xb
  jal x0, default_exc_handler
  88:	0000                	unimp
  8a:	0132                	slli	sp,sp,0xc
  asm volatile(
  8c:	0000                	unimp
  8e:	0c06                	slli	s8,s8,0x1
  90:	5e10                	lw	a2,56(a2)
  92:	005f 009f 4407      	.byte	0x5f, 0x00, 0x9f, 0x00, 0x07, 0x44
}
  98:	0001                	nop
  jal x0, default_exc_handler
  9a:	4800                	lw	s0,16(s0)
  9c:	0001                	nop
  mv  x1, x0
  9e:	0600                	addi	s0,sp,768
  a0:	400c                	lw	a1,0(s0)
  mv  x2, x1
  a2:	0f42                	slli	t5,t5,0x10
  mv  x3, x1
  a4:	9f00                	.2byte	0x9f00
  mv  x4, x1
  a6:	0700                	addi	s0,sp,896
  mv  x5, x1
  a8:	0144                	addi	s1,sp,132
  mv  x6, x1
  aa:	0000                	unimp
  mv  x7, x1
  ac:	0148                	addi	a0,sp,132
  mv  x8, x1
  ae:	0000                	unimp
  mv  x9, x1
  b0:	0c06                	slli	s8,s8,0x1
  mv x10, x1
  b2:	5e10                	lw	a2,56(a2)
  mv x11, x1
  b4:	005f 009f 4e07      	.byte	0x5f, 0x00, 0x9f, 0x00, 0x07, 0x4e
  mv x14, x1
  ba:	0001                	nop
  mv x15, x1
  bc:	5000                	lw	s0,32(s0)
  mv x16, x1
  be:	0001                	nop
  mv x17, x1
  c0:	0600                	addi	s0,sp,768
  mv x18, x1
  c2:	400c                	lw	a1,0(s0)
  mv x19, x1
  c4:	0f42                	slli	t5,t5,0x10
  mv x20, x1
  c6:	9f00                	.2byte	0x9f00
  mv x21, x1
  c8:	0700                	addi	s0,sp,896
  mv x22, x1
  ca:	014e                	slli	sp,sp,0x13
  mv x23, x1
  cc:	0000                	unimp
  mv x24, x1
  ce:	0150                	addi	a2,sp,132
  mv x25, x1
  d0:	0000                	unimp
  mv x26, x1
  d2:	0c06                	slli	s8,s8,0x1
  mv x27, x1
  d4:	5e10                	lw	a2,56(a2)
  mv x28, x1
  d6:	005f 009f 8c07      	.byte	0x5f, 0x00, 0x9f, 0x00, 0x07, 0x8c
  mv x31, x1
  dc:	0000                	unimp
  la   x2, _stack_start
  de:	9800                	.2byte	0x9800
  e0:	0000                	unimp
  e2:	0100                	addi	s0,sp,128
  e4:	075a                	slli	a4,a4,0x16
  la x26, _bss_start
  e6:	0098                	addi	a4,sp,64
  e8:	0000                	unimp
  la x27, _bss_end
  ea:	009a                	slli	ra,ra,0x6
  ec:	0000                	unimp
  bge x26, x27, zero_loop_end
  ee:	a304                	.2byte	0xa304
  f0:	5a01                	li	s4,-32
  sw x0, 0(x26)
  f2:	9f 00             	Address 0x00000000000000f2 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
  nop
   0:	0024                	addi	s1,sp,8
   2:	0000                	unimp
   4:	0002                	c.slli64	zero
   6:	0000                	unimp
   8:	0000                	unimp
   a:	0004                	.2byte	0x4
   c:	0000                	unimp
   e:	0000                	unimp
  10:	008c                	addi	a1,sp,64
  12:	0000                	unimp
  14:	000e                	c.slli	zero,0x3
  16:	0000                	unimp
  18:	0104                	addi	s1,sp,128
  1a:	0000                	unimp
  1c:	0052                	c.slli	zero,0x14
	...
  26:	0000                	unimp
  28:	0024                	addi	s1,sp,8
  2a:	0000                	unimp
  2c:	0002                	c.slli64	zero
  2e:	0286                	slli	t0,t0,0x1
  30:	0000                	unimp
  32:	0004                	.2byte	0x4
  34:	0000                	unimp
  36:	0000                	unimp
  38:	009a                	slli	ra,ra,0x6
  3a:	0000                	unimp
  3c:	006a                	c.slli	zero,0x1a
  3e:	0000                	unimp
  40:	0000                	unimp
  42:	0000                	unimp
  44:	008c                	addi	a1,sp,64
	...

Disassembly of section .debug_rnglists:

00000000 <.debug_rnglists>:
   0:	0066                	c.slli	zero,0x19
   2:	0000                	unimp
   4:	0005                	c.nop	1
   6:	0004                	.2byte	0x4
   8:	0000                	unimp
   a:	0000                	unimp
   c:	1806                	slli	a6,a6,0x21
   e:	0001                	nop
  10:	1c00                	addi	s0,sp,560
  12:	0001                	nop
  14:	0600                	addi	s0,sp,768
  16:	0124                	addi	s1,sp,136
  18:	0000                	unimp
  1a:	012c                	addi	a1,sp,136
  1c:	0000                	unimp
  1e:	2c06                	.2byte	0x2c06
  20:	0001                	nop
  22:	4400                	lw	s0,8(s0)
  24:	0001                	nop
  26:	0000                	unimp
  28:	1806                	slli	a6,a6,0x21
  2a:	0001                	nop
  2c:	1c00                	addi	s0,sp,560
  2e:	0001                	nop
  30:	0600                	addi	s0,sp,768
  32:	0124                	addi	s1,sp,136
  34:	0000                	unimp
  36:	0128                	addi	a0,sp,136
  38:	0000                	unimp
  3a:	2e06                	.2byte	0x2e06
  3c:	0001                	nop
  3e:	3200                	.2byte	0x3200
  40:	0001                	nop
  42:	0000                	unimp
  44:	4806                	lw	a6,64(sp)
  46:	0001                	nop
  48:	4a00                	lw	s0,16(a2)
  4a:	0001                	nop
  4c:	0600                	addi	s0,sp,768
  4e:	014e                	slli	sp,sp,0x13
  50:	0000                	unimp
  52:	0150                	addi	a2,sp,132
  54:	0000                	unimp
  56:	0600                	addi	s0,sp,768
  58:	008c                	addi	a1,sp,64
  5a:	0000                	unimp
  5c:	009a                	slli	ra,ra,0x6
  5e:	0000                	unimp
  60:	0406                	slli	s0,s0,0x1
  62:	0001                	nop
  64:	5600                	lw	s0,40(a2)
  66:	0001                	nop
  68:	0000                	unimp
  6a:	0016                	c.slli	zero,0x5
  6c:	0000                	unimp
  6e:	0005                	c.nop	1
  70:	0004                	.2byte	0x4
  72:	0000                	unimp
  74:	0000                	unimp
  76:	00009a07          	.4byte	0x9a07
  7a:	7200                	.2byte	0x7200
  jal x0, default_exc_handler
  7c:	00000007          	.4byte	0x7
  jal x0, reset_handler
  80:	8c00                	.2byte	0x8c00
  82:	0001                	nop

Disassembly of section .debug_line:

00000000 <.debug_line>:
  nop
   0:	01e8                	addi	a0,sp,204
   2:	0000                	unimp
   4:	0005                	c.nop	1
   6:	0004                	.2byte	0x4
   8:	003c                	addi	a5,sp,8
   a:	0000                	unimp
   c:	0101                	addi	sp,sp,0
   e:	fb01                	bnez	a4,ffffff1e <_stack_start+0xfffeff1e>
  10:	0d0e                	slli	s10,s10,0x3
  12:	0100                	addi	s0,sp,128
  14:	0101                	addi	sp,sp,0
  16:	0001                	nop
  18:	0000                	unimp
  1a:	0001                	nop
  1c:	0100                	addi	s0,sp,128
  1e:	0101                	addi	sp,sp,0
  20:	031f 0000 0000      	.byte	0x1f, 0x03, 0x00, 0x00, 0x00, 0x00
  26:	0031                	c.nop	12
  28:	0000                	unimp
  2a:	0000006f          	j	2a <__DYNAMIC+0x2a>
  2e:	0102                	c.slli64	sp
  30:	021f 040f 002b      	.byte	0x1f, 0x02, 0x0f, 0x04, 0x2b, 0x00
  36:	0000                	unimp
  38:	2b00                	.2byte	0x2b00
  3a:	0000                	unimp
  3c:	0000                	unimp
  3e:	00a9                	addi	ra,ra,10
  40:	0000                	unimp
  42:	ba01                	j	fffff952 <_stack_start+0xfffef952>
  44:	0000                	unimp
  46:	0200                	addi	s0,sp,256
  48:	3205                	jal	fffff968 <_stack_start+0xfffef968>
  4a:	0500                	addi	s0,sp,640
  4c:	8c02                	jr	s8
  4e:	0000                	unimp
  50:	0300                	addi	s0,sp,384
  52:	010a                	slli	sp,sp,0x2
  54:	0305                	addi	t1,t1,1
  56:	00090103          	lb	sp,0(s2)
  5a:	0100                	addi	s0,sp,128
  5c:	00090103          	lb	sp,0(s2)
  60:	0100                	addi	s0,sp,128
  62:	0105                	addi	sp,sp,1
  64:	0306                	slli	t1,t1,0x1
  66:	090a                	slli	s2,s2,0x2
  68:	000c                	.2byte	0xc
  6a:	0901                	addi	s2,s2,0
  6c:	0002                	c.slli64	zero
  6e:	0100                	addi	s0,sp,128
  70:	0501                	addi	a0,a0,0
  72:	0021                	c.nop	8
  74:	0205                	addi	tp,tp,1 # 1 <__DYNAMIC+0x1>
  76:	0104                	addi	s1,sp,128
  78:	0000                	unimp
  7a:	05012403          	lw	s0,80(sp)
  jal x0, default_exc_handler
  7e:	09030303          	lb	t1,144(t1)
  jal x0, reset_handler
  82:	0000                	unimp
  jal x0, default_exc_handler
  84:	0301                	addi	t1,t1,0
  86:	0901                	addi	s2,s2,0
  jal x0, default_exc_handler
  88:	0000                	unimp
  8a:	0501                	addi	a0,a0,0
  asm volatile(
  8c:	0621                	addi	a2,a2,8 # fffe6008 <_stack_start+0xfffd6008>
  8e:	00097c03          	.4byte	0x97c03
  92:	0100                	addi	s0,sp,128
  94:	0805                	addi	a6,a6,1
  96:	0e090403          	lb	s0,224(s2)
  jal x0, default_exc_handler
  9a:	0100                	addi	s0,sp,128
  9c:	0c05                	addi	s8,s8,1
  mv  x1, x0
  9e:	02090203          	lb	tp,32(s2)
  mv  x2, x1
  a2:	0100                	addi	s0,sp,128
  mv  x3, x1
  a4:	0305                	addi	t1,t1,1
  mv  x4, x1
  a6:	04097203          	.4byte	0x4097203
  mv  x6, x1
  aa:	0100                	addi	s0,sp,128
  mv  x7, x1
  ac:	0805                	addi	a6,a6,1
  mv  x8, x1
  ae:	04090c03          	lb	s8,64(s2)
  mv x10, x1
  b2:	0100                	addi	s0,sp,128
  mv x11, x1
  b4:	0305                	addi	t1,t1,1
  mv x12, x1
  b6:	0306                	slli	t1,t1,0x1
  mv x13, x1
  b8:	0902                	c.slli64	s2
  mv x14, x1
  ba:	0004                	.2byte	0x4
  mv x15, x1
  bc:	0501                	addi	a0,a0,0
  mv x16, x1
  be:	060c                	addi	a1,sp,768
  mv x17, x1
  c0:	00090003          	lb	zero,0(s2)
  mv x19, x1
  c4:	0100                	addi	s0,sp,128
  mv x20, x1
  c6:	0305                	addi	t1,t1,1
  mv x21, x1
  c8:	04097203          	.4byte	0x4097203
  mv x23, x1
  cc:	0100                	addi	s0,sp,128
  mv x24, x1
  ce:	0c05                	addi	s8,s8,1
  mv x25, x1
  d0:	04091803          	lh	a6,64(s2)
  mv x27, x1
  d4:	0100                	addi	s0,sp,128
  mv x28, x1
  d6:	1705                	addi	a4,a4,-31
  mv x29, x1
  d8:	02097d03          	.4byte	0x2097d03
  mv x31, x1
  dc:	0100                	addi	s0,sp,128
  la   x2, _stack_start
  de:	0305                	addi	t1,t1,1
  e0:	0306                	slli	t1,t1,0x1
  e2:	097f                	.2byte	0x97f
  e4:	0002                	c.slli64	zero
  la x26, _bss_start
  e6:	0501                	addi	a0,a0,0
  e8:	0305                	addi	t1,t1,1
  la x27, _bss_end
  ea:	0901                	addi	s2,s2,0
  ec:	0000                	unimp
  bge x26, x27, zero_loop_end
  ee:	0501                	addi	a0,a0,0
  f0:	0309                	addi	t1,t1,2
  sw x0, 0(x26)
  f2:	0900                	addi	s0,sp,144
  f4:	0000                	unimp
  addi x26, x26, 4
  f6:	0501                	addi	a0,a0,0
  ble x26, x27, zero_loop
  f8:	09000317          	auipc	t1,0x9000
  addi x10, x0, 0
  fc:	0000                	unimp
  addi x11, x0, 0
  fe:	0501                	addi	a0,a0,0
  jal x1, main
 100:	060d                	addi	a2,a2,3
 102:	00090003          	lb	zero,0(s2)
int main(int argc, char **argv) {
 106:	0100                	addi	s0,sp,128
 108:	0705                	addi	a4,a4,1
 10a:	0306                	slli	t1,t1,0x1
 10c:	0902                	c.slli64	s2
 10e:	0002                	c.slli64	zero
 110:	0501                	addi	a0,a0,0
  *var = 0x00;
 112:	096e0303          	lb	t1,150(t3)
  uint32_t num = 0xD9CE4B9E; 
 116:	0000                	unimp
  delay_loop_ibex(usec_cycles);
 118:	0301                	addi	t1,t1,0 # 90000f8 <_stack_start+0x8ff00f8>
 11a:	0978                	addi	a4,sp,156
  *var = 0x00;
 11c:	0000                	unimp
 11e:	0301                	addi	t1,t1,0
  uint32_t num = 0xD9CE4B9E; 
 120:	0901                	addi	s2,s2,0
 122:	0000                	unimp
  delay_loop_ibex(usec_cycles);
 124:	0301                	addi	t1,t1,0
 126:	0902                	c.slli64	s2
      *var = num >> i;
 128:	0000                	unimp
    for(int i = 24; i >= 0; i -= 8)
 12a:	0301                	addi	t1,t1,0
 12c:	0901                	addi	s2,s2,0
  delay_loop_ibex(usec_cycles);
 12e:	0004                	.2byte	0x4
 130:	0501                	addi	a0,a0,0
      *var = num >> i;
 132:	09170307          	.4byte	0x9170307
 136:	0000                	unimp
 138:	0501                	addi	a0,a0,0
 13a:	0612                	slli	a2,a2,0x4
 13c:	00090003          	lb	zero,0(s2)
    for(int i = 24; i >= 0; i -= 8)
 140:	0100                	addi	s0,sp,128
 142:	0c05                	addi	s8,s8,1
  delay_loop_ibex(usec_cycles);
 144:	04090003          	lb	zero,64(s2)
 148:	0100                	addi	s0,sp,128
    *var = 0x00;
 14a:	1f05                	addi	t5,t5,-31
 14c:	0306                	slli	t1,t1,0x1
  delay_loop_ibex(usec_cycles);
 14e:	097d                	addi	s2,s2,31
    num = ~num;
 150:	0008                	.2byte	0x8
 152:	0501                	addi	a0,a0,0
    for(int i = 24; i >= 0; i -= 8)
 154:	09000317          	auipc	t1,0x9000
 158:	0002                	c.slli64	zero
 15a:	0501                	addi	a0,a0,0
 15c:	0305                	addi	t1,t1,1 # 9000155 <_stack_start+0x8ff0155>
 15e:	0905                	addi	s2,s2,1
 160:	0004                	.2byte	0x4
 162:	0501                	addi	a0,a0,0
 164:	096b0303          	lb	t1,150(s6)
 168:	0000                	unimp
 16a:	0301                	addi	t1,t1,0
 16c:	0978                	addi	a4,sp,156
 16e:	0000                	unimp
 170:	0301                	addi	t1,t1,0
 172:	0901                	addi	s2,s2,0
 174:	0000                	unimp
 176:	0301                	addi	t1,t1,0
 178:	0902                	c.slli64	s2
 17a:	0000                	unimp
 17c:	0301                	addi	t1,t1,0
 17e:	0901                	addi	s2,s2,0
 180:	0004                	.2byte	0x4
 182:	0501                	addi	a0,a0,0
 184:	0305                	addi	t1,t1,1
 186:	091a                	slli	s2,s2,0x6
 188:	0000                	unimp
 18a:	0501                	addi	a0,a0,0
 18c:	65030603          	lb	a2,1616(t1)
 190:	0009                	c.nop	2
 192:	0100                	addi	s0,sp,128
 194:	0a05                	addi	s4,s4,1
 196:	02091b03          	lh	s6,32(s2)
 19a:	0100                	addi	s0,sp,128
 19c:	0505                	addi	a0,a0,1
 19e:	0306                	slli	t1,t1,0x1
 1a0:	0901                	addi	s2,s2,0
 1a2:	0004                	.2byte	0x4
 1a4:	0501                	addi	a0,a0,0
 1a6:	09690303          	lb	t1,150(s2)
 1aa:	0000                	unimp
 1ac:	0301                	addi	t1,t1,0
 1ae:	0978                	addi	a4,sp,156
 1b0:	0000                	unimp
 1b2:	0301                	addi	t1,t1,0
 1b4:	0901                	addi	s2,s2,0
 1b6:	0000                	unimp
 1b8:	0301                	addi	t1,t1,0
 1ba:	0902                	c.slli64	s2
 1bc:	0000                	unimp
 1be:	0301                	addi	t1,t1,0
 1c0:	0901                	addi	s2,s2,0
 1c2:	0002                	c.slli64	zero
 1c4:	0501                	addi	a0,a0,0
 1c6:	0305                	addi	t1,t1,1
 1c8:	091c                	addi	a5,sp,144
 1ca:	0000                	unimp
 1cc:	0501                	addi	a0,a0,0
 1ce:	0609                	addi	a2,a2,2
 1d0:	00090003          	lb	zero,0(s2)
 1d4:	0100                	addi	s0,sp,128
 1d6:	0306                	slli	t1,t1,0x1
 1d8:	00040977          	.4byte	0x40977
 1dc:	0501                	addi	a0,a0,0
 1de:	0605                	addi	a2,a2,1
 1e0:	00090103          	lb	sp,0(s2)
 1e4:	0100                	addi	s0,sp,128
 1e6:	0209                	addi	tp,tp,2 # 2 <__DYNAMIC+0x2>
 1e8:	0000                	unimp
 1ea:	0101                	addi	sp,sp,0
 1ec:	015f 0000 0005      	.byte	0x5f, 0x01, 0x00, 0x00, 0x05, 0x00
 1f2:	0004                	.2byte	0x4
 1f4:	002a                	c.slli	zero,0xa
 1f6:	0000                	unimp
 1f8:	0101                	addi	sp,sp,0
 1fa:	fb01                	bnez	a4,10a <main+0x6>
 1fc:	0d0e                	slli	s10,s10,0x3
 1fe:	0100                	addi	s0,sp,128
 200:	0101                	addi	sp,sp,0
 202:	0001                	nop
 204:	0000                	unimp
 206:	0001                	nop
 208:	0100                	addi	s0,sp,128
 20a:	0101                	addi	sp,sp,0
 20c:	011f 0000 0000      	.byte	0x1f, 0x01, 0x00, 0x00, 0x00, 0x00
 212:	0102                	c.slli64	sp
 214:	021f 020f 00c4      	.byte	0x1f, 0x02, 0x0f, 0x02, 0xc4, 0x00
 21a:	0000                	unimp
 21c:	c400                	sw	s0,8(s0)
 21e:	0000                	unimp
 220:	0000                	unimp
 222:	0500                	addi	s0,sp,640
 224:	9a02                	jalr	s4
 226:	0000                	unimp
 228:	1500                	addi	s0,sp,672
 22a:	04090403          	lb	s0,64(s2)
 22e:	0100                	addi	s0,sp,128
 230:	04090103          	lb	sp,64(s2)
 234:	0100                	addi	s0,sp,128
 236:	02090103          	lb	sp,32(s2)
 23a:	0100                	addi	s0,sp,128
 23c:	02090103          	lb	sp,32(s2)
 240:	0100                	addi	s0,sp,128
 242:	02090103          	lb	sp,32(s2)
 246:	0100                	addi	s0,sp,128
 248:	02090103          	lb	sp,32(s2)
 24c:	0100                	addi	s0,sp,128
 24e:	02090103          	lb	sp,32(s2)
 252:	0100                	addi	s0,sp,128
 254:	02090103          	lb	sp,32(s2)
 258:	0100                	addi	s0,sp,128
 25a:	02090103          	lb	sp,32(s2)
 25e:	0100                	addi	s0,sp,128
 260:	02090103          	lb	sp,32(s2)
 264:	0100                	addi	s0,sp,128
 266:	02090103          	lb	sp,32(s2)
 26a:	0100                	addi	s0,sp,128
 26c:	02090103          	lb	sp,32(s2)
 270:	0100                	addi	s0,sp,128
 272:	02090103          	lb	sp,32(s2)
 276:	0100                	addi	s0,sp,128
 278:	02090103          	lb	sp,32(s2)
 27c:	0100                	addi	s0,sp,128
 27e:	02090103          	lb	sp,32(s2)
 282:	0100                	addi	s0,sp,128
 284:	02090103          	lb	sp,32(s2)
 288:	0100                	addi	s0,sp,128
 28a:	02090103          	lb	sp,32(s2)
 28e:	0100                	addi	s0,sp,128
 290:	02090103          	lb	sp,32(s2)
 294:	0100                	addi	s0,sp,128
 296:	02090103          	lb	sp,32(s2)
 29a:	0100                	addi	s0,sp,128
 29c:	02090103          	lb	sp,32(s2)
 2a0:	0100                	addi	s0,sp,128
 2a2:	02090103          	lb	sp,32(s2)
 2a6:	0100                	addi	s0,sp,128
 2a8:	02090103          	lb	sp,32(s2)
 2ac:	0100                	addi	s0,sp,128
 2ae:	02090103          	lb	sp,32(s2)
 2b2:	0100                	addi	s0,sp,128
 2b4:	02090103          	lb	sp,32(s2)
 2b8:	0100                	addi	s0,sp,128
 2ba:	02090103          	lb	sp,32(s2)
 2be:	0100                	addi	s0,sp,128
 2c0:	02090103          	lb	sp,32(s2)
 2c4:	0100                	addi	s0,sp,128
 2c6:	02090103          	lb	sp,32(s2)
 2ca:	0100                	addi	s0,sp,128
 2cc:	02090103          	lb	sp,32(s2)
 2d0:	0100                	addi	s0,sp,128
 2d2:	02090103          	lb	sp,32(s2)
 2d6:	0100                	addi	s0,sp,128
 2d8:	02090103          	lb	sp,32(s2)
 2dc:	0100                	addi	s0,sp,128
 2de:	02090103          	lb	sp,32(s2)
 2e2:	0100                	addi	s0,sp,128
 2e4:	02090303          	lb	t1,32(s2)
 2e8:	0100                	addi	s0,sp,128
 2ea:	08090603          	lb	a2,128(s2)
 2ee:	0100                	addi	s0,sp,128
 2f0:	04090103          	lb	sp,64(s2)
 2f4:	0100                	addi	s0,sp,128
 2f6:	04090203          	lb	tp,64(s2)
 2fa:	0100                	addi	s0,sp,128
 2fc:	04090303          	lb	t1,64(s2)
 300:	0100                	addi	s0,sp,128
 302:	04090103          	lb	sp,64(s2)
 306:	0100                	addi	s0,sp,128
 308:	02090103          	lb	sp,32(s2)
 30c:	0100                	addi	s0,sp,128
 30e:	04090603          	lb	a2,64(s2)
 312:	0100                	addi	s0,sp,128
 314:	02090103          	lb	sp,32(s2)
 318:	0100                	addi	s0,sp,128
 31a:	02090103          	lb	sp,32(s2)
 31e:	0100                	addi	s0,sp,128
 320:	0409                	addi	s0,s0,2
 322:	0000                	unimp
 324:	0101                	addi	sp,sp,0
 326:	0500                	addi	s0,sp,640
 328:	0002                	c.slli64	zero
 32a:	0000                	unimp
 32c:	0300                	addi	s0,sp,384
 32e:	00ca                	slli	ra,ra,0x12
 330:	0301                	addi	t1,t1,0
 332:	0902                	c.slli64	s2
 334:	007c                	addi	a5,sp,12
 336:	0301                	addi	t1,t1,0
 338:	0904                	addi	s1,sp,144
 33a:	0004                	.2byte	0x4
 33c:	0301                	addi	t1,t1,0
 33e:	0904                	addi	s1,sp,144
 340:	0004                	.2byte	0x4
 342:	0301                	addi	t1,t1,0
 344:	0904                	addi	s1,sp,144
 346:	0004                	.2byte	0x4
 348:	0901                	addi	s2,s2,0
 34a:	0004                	.2byte	0x4
 34c:	0100                	addi	s0,sp,128
 34e:	01              	Address 0x000000000000034e is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
  nop
   0:	5f5f 6975 746e      	.byte	0x5f, 0x5f, 0x75, 0x69, 0x6e, 0x74
   6:	5f38                	lw	a4,120(a4)
   8:	0074                	addi	a3,sp,12
   a:	7375                	lui	t1,0xffffd
   c:	6365                	lui	t1,0x19
   e:	7500                	.2byte	0x7500
  10:	65656c73          	csrrsi	s8,0x656,10
  14:	0070                	addi	a2,sp,12
  16:	6f6c                	.2byte	0x6f6c
  18:	0073706f          	j	3781e <_stack_start+0x2781e>
  1c:	6e75                	lui	t3,0x1d
  1e:	6e676973          	csrrsi	s2,0x6e6,14
  22:	6465                	lui	s0,0x19
  24:	6320                	.2byte	0x6320
  26:	6168                	.2byte	0x6168
  28:	0072                	c.slli	zero,0x1c
  2a:	726f6873          	csrrsi	a6,mhpmevent6h,30
  2e:	2074                	.2byte	0x2074
  30:	6e75                	lui	t3,0x1d
  32:	6e676973          	csrrsi	s2,0x6e6,14
  36:	6465                	lui	s0,0x19
  38:	6920                	.2byte	0x6920
  3a:	746e                	.2byte	0x746e
  3c:	5f00                	lw	s0,56(a4)
  3e:	755f 6e69 3374      	.byte	0x5f, 0x75, 0x69, 0x6e, 0x74, 0x33
  44:	5f32                	lw	t5,44(sp)
  46:	0074                	addi	a3,sp,12
  48:	616d                	addi	sp,sp,240
  4a:	6e69                	lui	t3,0x1a
  4c:	7500                	.2byte	0x7500
  4e:	5f636573          	csrrsi	a0,0x5f6,6
  52:	6c637963          	bgeu	t1,t1,724 <_bss_end+0x5bc>
  56:	7365                	lui	t1,0xffff9
  58:	6c00                	.2byte	0x6c00
  5a:	20676e6f          	jal	t3,76260 <_stack_start+0x66260>
  5e:	6f6c                	.2byte	0x6f6c
  60:	676e                	.2byte	0x676e
  62:	7520                	.2byte	0x7520
  64:	736e                	.2byte	0x736e
  66:	6769                	lui	a4,0x1a
  68:	656e                	.2byte	0x656e
  6a:	2064                	.2byte	0x2064
  6c:	6e69                	lui	t3,0x1a
  6e:	0074                	addi	a3,sp,12
  70:	7261                	lui	tp,0xffff8
  72:	64006367          	.4byte	0x64006367
  76:	6c65                	lui	s8,0x19
  78:	7961                	lui	s2,0xffff8
  7a:	6c5f 6f6f 5f70      	.byte	0x5f, 0x6c, 0x6f, 0x6f, 0x70, 0x5f
  jal x0, reset_handler
  80:	6269                	lui	tp,0x1a
  82:	7865                	lui	a6,0xffff9
  jal x0, default_exc_handler
  84:	6c00                	.2byte	0x6c00
  86:	20676e6f          	jal	t3,7628c <_stack_start+0x6628c>
  jal x0, default_exc_handler
  8a:	6f6c                	.2byte	0x6f6c
  asm volatile(
  8c:	676e                	.2byte	0x676e
  8e:	6920                	.2byte	0x6920
  90:	746e                	.2byte	0x746e
  92:	4700                	lw	s0,8(a4)
  94:	554e                	lw	a0,240(sp)
  96:	4320                	lw	s0,64(a4)
}
  98:	3731                	jal	ffffffa4 <_stack_start+0xfffeffa4>
  jal x0, default_exc_handler
  9a:	3120                	.2byte	0x3120
  9c:	2e32                	.2byte	0x2e32
  mv  x1, x0
  9e:	2e32                	.2byte	0x2e32
  a0:	2030                	.2byte	0x2030
  mv  x2, x1
  a2:	6d2d                	lui	s10,0xb
  mv  x3, x1
  a4:	6261                	lui	tp,0x18
  mv  x4, x1
  a6:	3d69                	jal	ffffff40 <_stack_start+0xfffeff40>
  mv  x5, x1
  a8:	6c69                	lui	s8,0x1a
  mv  x6, x1
  aa:	3370                	.2byte	0x3370
  mv  x7, x1
  ac:	2032                	.2byte	0x2032
  mv  x8, x1
  ae:	6d2d                	lui	s10,0xb
  mv  x9, x1
  b0:	646f6d63          	bltu	t5,t1,70a <_bss_end+0x5a2>
  mv x11, x1
  b4:	6c65                	lui	s8,0x19
  mv x12, x1
  b6:	6d3d                	lui	s10,0xf
  mv x13, x1
  b8:	6465                	lui	s0,0x19
  mv x14, x1
  ba:	6e61                	lui	t3,0x18
  mv x15, x1
  bc:	2079                	jal	14a <main+0x46>
  mv x16, x1
  be:	6d2d                	lui	s10,0xb
  mv x17, x1
  c0:	7574                	.2byte	0x7574
  mv x18, x1
  c2:	656e                	.2byte	0x656e
  mv x19, x1
  c4:	723d                	lui	tp,0xfffef
  mv x20, x1
  c6:	656b636f          	jal	t1,b671c <_stack_start+0xa671c>
  mv x22, x1
  ca:	2074                	.2byte	0x2074
  mv x23, x1
  cc:	6d2d                	lui	s10,0xb
  mv x24, x1
  ce:	7369                	lui	t1,0xffffa
  mv x25, x1
  d0:	2d61                	jal	768 <_bss_end+0x600>
  mv x26, x1
  d2:	63657073          	csrci	0x636,10
  mv x28, x1
  d6:	323d                	jal	fffffa04 <_stack_start+0xfffefa04>
  mv x29, x1
  d8:	322e                	.2byte	0x322e
  mv x30, x1
  da:	2d20                	.2byte	0x2d20
  mv x31, x1
  dc:	616d                	addi	sp,sp,240
  la   x2, _stack_start
  de:	6372                	.2byte	0x6372
  e0:	3d68                	.2byte	0x3d68
  e2:	7672                	.2byte	0x7672
  e4:	6d693233          	.4byte	0x6d693233
  la x26, _bss_start
  e8:	672d2063          	.4byte	0x672d2063
  la x27, _bss_end
  ec:	2d20                	.2byte	0x2d20
  bge x26, x27, zero_loop_end
  ee:	2d20734f          	.4byte	0x2d20734f
  sw x0, 0(x26)
  f2:	7666                	.2byte	0x7666
  f4:	7369                	lui	t1,0xffffa
  addi x26, x26, 4
  f6:	6269                	lui	tp,0x1a
  ble x26, x27, zero_loop
  f8:	6c69                	lui	s8,0x1a
  fa:	7469                	lui	s0,0xffffa
  addi x10, x0, 0
  fc:	3d79                	jal	ffffff9a <_stack_start+0xfffeff9a>
  addi x11, x0, 0
  fe:	6968                	.2byte	0x6968
  jal x1, main
 100:	6464                	.2byte	0x6464
 102:	6e65                	lui	t3,0x19
int main(int argc, char **argv) {
 104:	7300                	.2byte	0x7300
 106:	6f68                	.2byte	0x6f68
 108:	7472                	.2byte	0x7472
 10a:	6920                	.2byte	0x6920
 10c:	746e                	.2byte	0x746e
 10e:	6100                	.2byte	0x6100
 110:	6772                	.2byte	0x6772
  *var = 0x00;
 112:	0076                	c.slli	zero,0x1d
  uint32_t num = 0xD9CE4B9E; 
 114:	7375                	lui	t1,0xffffd
 116:	656c                	.2byte	0x656c
  delay_loop_ibex(usec_cycles);
 118:	7065                	c.lui	zero,0xffff9
 11a:	695f 6562 0078      	.byte	0x5f, 0x69, 0x62, 0x65, 0x78, 0x00
  uint32_t num = 0xD9CE4B9E; 
 120:	30747263          	bgeu	s0,t2,424 <_bss_end+0x2bc>
  delay_loop_ibex(usec_cycles);
 124:	532e                	lw	t1,232(sp)
 126:	2f00                	.2byte	0x2f00
      *var = num >> i;
 128:	6f68                	.2byte	0x6f68
    for(int i = 24; i >= 0; i -= 8)
 12a:	656d                	lui	a0,0x1b
 12c:	686b702f          	.4byte	0x686b702f
  delay_loop_ibex(usec_cycles);
 130:	7261                	lui	tp,0xffff8
      *var = num >> i;
 132:	2f656863          	bltu	a0,s6,422 <_bss_end+0x2ba>
 136:	4545                	li	a0,17
 138:	31383143          	.4byte	0x31383143
 13c:	6562692f          	.4byte	0x6562692f
    for(int i = 24; i >= 0; i -= 8)
 140:	5f78                	lw	a4,124(a4)
 142:	657a                	.2byte	0x657a
  delay_loop_ibex(usec_cycles);
 144:	6264                	.2byte	0x6264
 146:	6472616f          	jal	sp,26f8c <_stack_start+0x16f8c>
    *var = 0x00;
 14a:	2f77732f          	.4byte	0x2f77732f
  delay_loop_ibex(usec_cycles);
 14e:	656c                	.2byte	0x656c
    num = ~num;
 150:	0064                	addi	s1,sp,12
 152:	20554e47          	.4byte	0x20554e47
 156:	5341                	li	t1,-16
 158:	3220                	.2byte	0x3220
 15a:	332e                	.2byte	0x332e
 15c:	0039                	c.nop	14

Disassembly of section .debug_line_str:

00000000 <.debug_line_str>:
  nop
   0:	6d6f682f          	.4byte	0x6d6f682f
   4:	2f65                	jal	7bc <_bss_end+0x654>
   6:	6b70                	.2byte	0x6b70
   8:	6168                	.2byte	0x6168
   a:	6372                	.2byte	0x6372
   c:	6568                	.2byte	0x6568
   e:	4345452f          	.4byte	0x4345452f
  12:	3831                	jal	fffff82e <_stack_start+0xfffef82e>
  14:	2f31                	jal	730 <_bss_end+0x5c8>
  16:	6269                	lui	tp,0x1a
  18:	7865                	lui	a6,0xffff9
  1a:	7a5f 6465 6f62      	.byte	0x5f, 0x7a, 0x65, 0x64, 0x62, 0x6f
  20:	7261                	lui	tp,0xffff8
  22:	2f64                	.2byte	0x2f64
  24:	6c2f7773          	csrrci	a4,0x6c2,30
  28:	6465                	lui	s0,0x19
  2a:	6c00                	.2byte	0x6c00
  2c:	6465                	lui	s0,0x19
  2e:	632e                	.2byte	0x632e
  30:	2f00                	.2byte	0x2f00
  32:	6f68                	.2byte	0x6f68
  34:	656d                	lui	a0,0x1b
  36:	686b702f          	.4byte	0x686b702f
  3a:	7261                	lui	tp,0xffff8
  3c:	2f656863          	bltu	a0,s6,32c <_bss_end+0x1c4>
  40:	2f434347          	.4byte	0x2f434347
  44:	656e                	.2byte	0x656e
  46:	62696c77          	.4byte	0x62696c77
  4a:	7369722f          	.4byte	0x7369722f
  4e:	32337663          	bgeu	t1,gp,37a <_bss_end+0x212>
  52:	752d                	lui	a0,0xfffeb
  54:	6b6e                	.2byte	0x6b6e
  56:	6f6e                	.2byte	0x6f6e
  58:	652d6e77          	.4byte	0x652d6e77
  5c:	666c                	.2byte	0x666c
  5e:	636e692f          	.4byte	0x636e692f
  62:	756c                	.2byte	0x756c
  64:	6564                	.2byte	0x6564
  66:	63616d2f          	.4byte	0x63616d2f
  6a:	6968                	.2byte	0x6968
  6c:	656e                	.2byte	0x656e
  6e:	2f00                	.2byte	0x2f00
  70:	6f68                	.2byte	0x6f68
  72:	656d                	lui	a0,0x1b
  74:	686b702f          	.4byte	0x686b702f
  78:	7261                	lui	tp,0xffff8
  7a:	2f656863          	bltu	a0,s6,36a <_bss_end+0x202>
  jal x0, default_exc_handler
  7e:	2f434347          	.4byte	0x2f434347
  jal x0, reset_handler
  82:	656e                	.2byte	0x656e
  jal x0, default_exc_handler
  84:	62696c77          	.4byte	0x62696c77
  jal x0, default_exc_handler
  88:	7369722f          	.4byte	0x7369722f
  asm volatile(
  8c:	32337663          	bgeu	t1,gp,3b8 <_bss_end+0x250>
  90:	752d                	lui	a0,0xfffeb
  92:	6b6e                	.2byte	0x6b6e
  94:	6f6e                	.2byte	0x6f6e
  96:	652d6e77          	.4byte	0x652d6e77
  jal x0, default_exc_handler
  9a:	666c                	.2byte	0x666c
  9c:	636e692f          	.4byte	0x636e692f
  mv  x1, x0
  a0:	756c                	.2byte	0x756c
  mv  x2, x1
  a2:	6564                	.2byte	0x6564
  mv  x3, x1
  a4:	7379732f          	.4byte	0x7379732f
  mv  x5, x1
  a8:	5f00                	lw	s0,56(a4)
  mv  x6, x1
  aa:	6564                	.2byte	0x6564
  mv  x7, x1
  ac:	6166                	.2byte	0x6166
  mv  x8, x1
  ae:	6c75                	lui	s8,0x1d
  mv  x9, x1
  b0:	5f74                	lw	a3,124(a4)
  mv x10, x1
  b2:	7974                	.2byte	0x7974
  mv x11, x1
  b4:	6570                	.2byte	0x6570
  mv x12, x1
  b6:	00682e73          	csrrs	t3,0x6,a6
  mv x14, x1
  ba:	735f 6474 6e69      	.byte	0x5f, 0x73, 0x74, 0x64, 0x69, 0x6e
  mv x17, x1
  c0:	2e74                	.2byte	0x2e74
  mv x18, x1
  c2:	0068                	addi	a0,sp,12
  mv x19, x1
  c4:	30747263          	bgeu	s0,t2,3c8 <_bss_end+0x260>
  mv x21, x1
  c8:	532e                	lw	t1,232(sp)
	...

Disassembly of section .comment:

00000000 <.comment>:
  nop
   0:	3a434347          	.4byte	0x3a434347
   4:	2820                	.2byte	0x2820
   6:	65653267          	.4byte	0x65653267
   a:	6535                	lui	a0,0xd
   c:	3334                	.2byte	0x3334
   e:	3030                	.2byte	0x3030
  10:	3831                	jal	fffff82c <_stack_start+0xfffef82c>
  12:	2029                	jal	1c <__DYNAMIC+0x1c>
  14:	3231                	jal	fffff920 <_stack_start+0xfffef920>
  16:	322e                	.2byte	0x322e
  18:	302e                	.2byte	0x302e
	...

Disassembly of section .riscv.attributes:

00000000 <.riscv.attributes>:
   0:	2541                	jal	680 <_bss_end+0x518>
   2:	0000                	unimp
   4:	7200                	.2byte	0x7200
   6:	7369                	lui	t1,0xffffa
   8:	01007663          	bgeu	zero,a6,14 <__DYNAMIC+0x14>
   c:	0000001b          	.4byte	0x1b
  10:	1004                	addi	s1,sp,32
  12:	7205                	lui	tp,0xfffe1
  14:	3376                	.2byte	0x3376
  16:	6932                	.2byte	0x6932
  18:	7032                	.2byte	0x7032
  1a:	5f30                	lw	a2,120(a4)
  1c:	326d                	jal	fffff9c6 <_stack_start+0xfffef9c6>
  1e:	3070                	.2byte	0x3070
  20:	635f 7032 0030      	.byte	0x5f, 0x63, 0x32, 0x70, 0x30, 0x00

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	000c                	.2byte	0xc
   2:	0000                	unimp
   4:	ffff                	.2byte	0xffff
   6:	ffff                	.2byte	0xffff
   8:	7c010003          	lb	zero,1984(sp)
   c:	0d01                	addi	s10,s10,0 # b000 <_stack_len+0x7000>
   e:	0002                	c.slli64	zero
  10:	000c                	.2byte	0xc
  12:	0000                	unimp
  14:	0000                	unimp
  16:	0000                	unimp
  18:	008c                	addi	a1,sp,64
  1a:	0000                	unimp
  1c:	000e                	c.slli	zero,0x3
  1e:	0000                	unimp
  20:	001c                	.2byte	0x1c
  22:	0000                	unimp
  24:	0000                	unimp
  26:	0000                	unimp
  28:	0104                	addi	s1,sp,128
  2a:	0000                	unimp
  2c:	0052                	c.slli	zero,0x14
  2e:	0000                	unimp
  30:	0e42                	slli	t3,t3,0x10
  32:	4c20                	lw	s0,88(s0)
  34:	0288                	addi	a0,sp,320
  36:	0389                	addi	t2,t2,2
  38:	06940593          	addi	a1,s0,105 # 19069 <_stack_start+0x9069>
  3c:	0181                	addi	gp,gp,0
  3e:	0492                	slli	s1,s1,0x4
